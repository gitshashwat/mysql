
1. Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137. Round your answer to 4 decimal places.
Ans:
select round(long_W,4) from station where
lat_n = (select max(lat_n) from station where
lat_n<137.2345) ;

2. Consider P1 and P2 to be two points on a 2D plane where  are the respective minimum and maximum values of Northern Latitude (LAT_N)
Query the Euclidean Distance between points  and format your answer to display 4  decimal digits.
Ans: select ROUND((
    SQRT(
        POWER((
            min(lat_n)-max(lat_n)
            ),2)
        +
        POWER((
            min(long_w)-max(long_w)
            ),2)
        )
        ),4) from station;
        
3. Calculate the average by removing zeros from salary: ex- 3402 becomes 342 or 22100 becomes 221.
Ans: select avg(replace(salary,"0",""))) from table

4. We define an employee's total earnings to be their monthly  worked, and the maximum total earnings to be the maximum total earnings for any employee in the Employee table. Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings 
Link: https://www.hackerrank.com/challenges/earnings-of-employees/problem?isFullScreen=true
Ans: select (salary*months) as earnings, count(*) as count from Employee group by (salary*months) order by 1 desc limit 1;

5. https://www.hackerrank.com/challenges/placements/problem?isFullScreen=true
Ans:

with x1 as (select b.ID,a.name,b.salary from students a join packages b on a.ID=B.ID),

x2 as (select a.ID, a.Friend_ID,b.salary as Friend_sal from Friends a join Packages b on a.Friend_ID = b.ID)

select x1.name from x1 join x2 on x1.ID=x2.ID where x1.salary<x2.Friend_sal order by x2.Friend_sal;

6. https://www.hackerrank.com/challenges/contest-leaderboard/problem?isFullScreen=true
Ans:
with abc as (select a.hacker_id,a.name,b.submission_id,b.challenge_id,b.score from Hackers a join Submissions b on a.hacker_id = b.hacker_id),

bcd as (select hacker_id,challenge_id,max(score) as score from abc group by hacker_id,challenge_id),

final as (select bcd.hacker_id,x.name,score from bcd join Hackers x on bcd.hacker_id=x.hacker_id)

select hacker_id,name,sum(score) as score from final group by hacker_id,name
having sum(score)>0
order by sum(score) desc,hacker_id asc ;


7. https://www.hackerrank.com/challenges/the-report/problem?isFullScreen=true
Ans: 
with abc as (select Name,Marks from Students),

gg as (select abc.Name,grade,abc.Marks from grades join abc on abc.Marks between min_mark and max_mark),

y as (select * from gg where grade>7 order by grade desc, name asc),

bc as (select * from y
union
(select NULL as Name,grade,Marks from gg where grade<8 order by grade desc, Marks))

select * from bc order by grade desc,name,marks;

8. 
